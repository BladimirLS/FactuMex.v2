using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Threading.Tasks;
using CallCenter.Models;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Configuration;
using Renomax.Models;

namespace Renomax.Controllers
{
    [Route("apiv1/usuario")]
    [ApiController]
    public class UsuarioController : ControllerBase
    {
        [HttpGet]
        [AuthRequired]
        public DataTable Get()
        {
            string usuario = Request.Query.Where(u => u.Key == "u").SingleOrDefault().Value;
            return new DB(Cns.Renomax, "CargaUsuarios", new List<object> { usuario }.ToArray())
                .RetornaDTxP();
        }
        [HttpPost]
        [AuthRequired]
        public int Post(Usuario u)
        {
            string b64 = "";

            try
            {
                if (u.Foto.Length > 45)
                {
                    var conf = new ConfigurationBuilder().AddJsonFile(".\\Config.json").Build();
                    string fName = Guid.NewGuid().ToString() + ".jpg";
                    System.IO.File.WriteAllBytes(conf.GetValue<string>("Img") + fName, Convert.FromBase64String(u.Foto));
                    u.Foto = fName;
                }
            }
            catch (Exception ex)
            {
                var conf = new ConfigurationBuilder().AddJsonFile(".\\Config.json").Build();
                string fName = Guid.NewGuid().ToString() + ".jpg";
                System.IO.File.WriteAllBytes(conf.GetValue<string>("Img") + fName, Convert.FromBase64String(b64));
                u.Foto = fName;   
            }

            return Convert.ToInt32(new DB(Cns.Renomax, "GuardaUsuario", new List<object> { u }.ToArray())
                .EjecutaCmd());
        }
    }
}